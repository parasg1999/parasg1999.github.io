{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/feb-8-daily-programming-diary","result":{"data":{"post":{"__typename":"MdxPost","slug":"/feb-8-daily-programming-diary","title":"Feb 8 - Daily Programming Diary","date":"08.02.2021","tags":[{"name":"Diary","slug":"diary"},{"name":"Programming","slug":"programming"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Feb 8 - Daily Programming Diary\",\n  \"date\": \"2021-02-08T00:00:00.000Z\",\n  \"tags\": [\"Diary\", \"Programming\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h5\", null, \"1:30\"), mdx(HideContent, {\n    myKey: \"dafuq\",\n    mdxType: \"HideContent\"\n  }, mdx(\"p\", null, \"There is a reason why I always think I shouldn't trust people, they suck. There have been so many times that\\nYeah it's early but I thought I shouold complete my work on the HackOn website ASAP. Time to update the Modal, and past workshops. The most important thing is to find the datat related to workshops. Since I just received the names of the workshops, I'll be going to their LinkedIn to search for content related to speaker as well as the workshop description. \")), mdx(\"h5\", null, \"3:30\"), mdx(\"p\", null, \"Finally updated the workshop data. To get all the information was a tough job along with some UI fixes. Although I did just encountered another bug. The modal can be closed easily on the PC by clicking the backdrop but on mobile phones, the backdrop is not visible, so there is a need for a close button. I'll just reuse the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"add-calender\"), \" icon and rotate it to look like a cross.\"), mdx(\"h5\", null, \"4:00\"), mdx(\"p\", null, \"Took some time to position the button in the modal with some position hacks, DAMN! But it's finally done.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Time for sleep after I watch some Lucifer!\")), mdx(\"h5\", null, \"22:30\"), mdx(\"p\", null, \"Let's start today's \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/explore/challenge/card/february-leetcoding-challenge-2021/584/week-1-february-1st-february-7th/3631/\"\n  }), \"Leetcode challenge\"), \". The question seems to be pretty simple. The appraoch is to maintain a vector that stores the distance from left, and then use that to find whether the distance is minimum from left or right, and by how much.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=shortest-distance-to-a-character.cpp\"\n  }), \"vector<int> shortestToChar(string s, char c) {\\n    int a = 100000;\\n    vector<int> left, right(s.length(), 0);\\n    for (int i = 0; i < s.length(); i++) {\\n        a++;\\n        if (s[i] == c) {\\n            a = 0;\\n        }\\n        left.push_back(a);\\n    }\\n    a = 100000;\\n    for (int i = s.length() - 1; i >= 0; i--) {\\n        a++;\\n        if (s[i] == c) {\\n            a = 0;\\n        }\\n        right[i] = min(a, left[i]);\\n    }\\n\\n    return right;\\n}\\n\")), mdx(\"p\", null, \"The complexity is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"O(N)\"), \" and space complexity is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"O(N)\"), \" where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"N\"), \" is the length of the string.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Bye!\")), mdx(\"h3\", null, \"EOD Checklist\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Leetcode February Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"This blog\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"1:30 There is a reason why I always think I shouldn't trust people, they suck. There have been so many times that \nYeah it's early but Iâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/feb-8-daily-programming-diary","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}