{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/feb-16-daily-programming-diary","result":{"data":{"post":{"__typename":"MdxPost","slug":"/feb-16-daily-programming-diary","title":"Feb 16 - Daily Programming Diary","date":"16.02.2021","tags":[{"name":"Diary","slug":"diary"},{"name":"Programming","slug":"programming"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Feb 16 - Daily Programming Diary\",\n  \"date\": \"2021-02-16T00:00:00.000Z\",\n  \"tags\": [\"Diary\", \"Programming\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h5\", null, \"3:00\"), mdx(\"p\", null, \"HackOn deployment is done on netlify. I didn't want to install it as a GitHub application for the organization so I'm glad someone else did.\\nI also got an official HackOn E-Mail account. \\uD83C\\uDF89\"), mdx(\"h5\", null, \"4:00\"), mdx(\"p\", null, \"There need to be a lot of minor changes in the HackOn website and the most challenging would be to make \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mailto\"), \" tags click to copy with a popover.\"), mdx(\"p\", null, \"The process should be simple though. It just needs some CSS properties when hovered, and then change the text dynamically when clicked.\"), mdx(\"h5\", null, \"5:00\"), mdx(\"p\", null, \"Made the other changes as well to the meta data, and explored the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dev.to\"), \" store for stickers! \\uD83D\\uDE1B\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Yes, I got a pack (thanks to Rishabh). \\uD83D\\uDE2C\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Time to take a break!\")), mdx(\"h5\", null, \"13:00\"), mdx(\"p\", null, \"Starting some other changes to the website. Need to change the look of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"New Sponsorship\"), \" block. It looks like it has to be ignored by the viewers right now.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Break for Valorant! Been a while!\")), mdx(\"h5\", null, \"16:00\"), mdx(\"p\", null, \"Starting today's \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/explore/featured/card/february-leetcoding-challenge-2021/586/week-3-february-15th-february-21st/3642/\"\n  }), \"Leetcode challenge\"), \". The problem looks simple, to toggle each and every alphabet to it's uppercase and lowercase form.\"), mdx(\"p\", null, \"The approach that I decided to go with\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Iterate over the string\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If character is an alphabet\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Check all the previous strings made for that character and toggle it to make new string.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=letter-case-permutation.cpp\"\n  }), \"vector<string> letterCasePermutation(string S) {\\n    vector<string> v;\\n    v.push_back(S);\\n\\n    for (int i = 0; i < S.length(); i++) {\\n        if (isdigit(S[i])) continue;\\n        \\n        int sz = v.size();\\n        for (int j = 0; j < sz; j++) {\\n            string t = v[j];\\n            if (t[i] == S[i]) {\\n                if (isupper(t[i]))\\n                    t[i] = tolower(t[i]);\\n                else if (islower(t[i]))\\n                    t[i] = toupper(t[i]);\\n                v.push_back(t);\\n            }\\n        }\\n    }\\n    return v;\\n}\\n\")), mdx(\"p\", null, \"Time complexity is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"O(2^n)\"), \" and space complexity \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"O(2^n)\"), \" where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n\"), \" is the length of the string.\"), mdx(\"h5\", null, \"21:00\"), mdx(\"p\", null, \"Have to get the \\\"Scroll to Top\\\" button working but unable to get the event listener working. \"), mdx(\"h5\", null, \"23:50\"), mdx(\"p\", null, \"After bashing my head around for approximately 3 hours, I finally figured it out. Turns out the window, or body was never scrolling. Instead, the container was scrolling so the listener had to be added to that. Phew! \\uD83D\\uDC4F\"), mdx(\"h5\", null, \"00:05 (Next day)\"), mdx(\"p\", null, \"Okay, so I'm finally pushing that, and I need rest for now!\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Until tomorrow! ^-^\")), mdx(\"h3\", null, \"EOD Checklist\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Leetcode February Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"This blog\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"3:00 HackOn deployment is done on netlify. I didn't want to install it as a GitHub application for the organization so I'm glad someone elseâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/feb-16-daily-programming-diary","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}