{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/jan-4-daily-programming-diary","result":{"data":{"post":{"__typename":"MdxPost","slug":"/jan-4-daily-programming-diary","title":"Jan 4 - Daily Programming Diary","date":"04.01.2021","tags":[{"name":"Diary","slug":"diary"},{"name":"Programming","slug":"programming"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Jan 4 - Daily Programming Diary\",\n  \"date\": \"2021-01-04T00:00:00.000Z\",\n  \"tags\": [\"Diary\", \"Programming\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h5\", null, \"2:30\"), mdx(\"p\", null, \"Can't sleep so I thought I'll put some work into the GitHub profile ReadMe. \"), mdx(\"h5\", null, \"4:00\"), mdx(\"p\", null, \"So what started to be GitHub ReadMe journey turned out to be a Go tutorial. Go really has a lot of inbuilt libraries. I'm still trying to wrap my head around the syntax of the language but looks like the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gorilla/mux\"\n  }), \"gorilla/mux\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gin-gonic/gin\"\n  }), \"gin\"), \" packages is fairly popular with the community.\\nWhile gmux(?) is used by almost 15k projects and gin by 9.6k at the time of writing, gin claims to be 40 times faster than other Go frameworks. That's wild!\"), mdx(\"h5\", null, \"5:00\"), mdx(\"p\", null, \"Was confused about what to do, so started Leetcode December Challenge \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/explore/featured/card/december-leetcoding-challenge/569/week-1-december-1st-december-7th/3551/\"\n  }), \"Day 1\"), \". The question itself is pretty straightforward. Just have to calculate the maximum depth of binary tree.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Using a variable to keep track of current depth and one for max depth.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=maximum-depth-of-binary-tree.cpp\"\n  }), \"int currMax = 0, curr = 0;\\nint maxDepth(TreeNode *root) {\\n    if (root == NULL) {\\n        return 0;\\n    } else {\\n        curr++;\\n        currMax = max(curr, currMax);\\n    }\\n\\n    if (root->left) {\\n        maxDepth(root->left);\\n        curr--;\\n    }\\n\\n    if (root->right) {\\n        maxDepth(root->right);\\n        curr--;\\n    }\\n\\n    return currMax;\\n}\\n\")), mdx(\"p\", null, \"Time Complexity O(n) where n is the number of nodes in the tree. O(h) space complexity where h is the height of the tree.\"), mdx(\"h5\", null, \"5:30\"), mdx(\"p\", null, \"Leetcode December Challenge \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/explore/featured/card/december-leetcoding-challenge/569/week-1-december-1st-december-7th/3553/\"\n  }), \"Day 3\"), \". The crux was to convert a BST into a LinkedList with inorder traversal. \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=increasing-order-search-tree.cpp\"\n  }), \"TreeNode *head = new TreeNode();\\nTreeNode *ans = head;\\nTreeNode *increasingBST(TreeNode *root) {\\n    if (!root) return NULL;\\n\\n    increasingBST(root->left);\\n    root->left = NULL;\\n    head->right = root;\\n    head = root;\\n\\n    increasingBST(root->right);\\n    return ans->right;\\n}\\n\")), mdx(\"p\", null, \"Time Complexity O(n) where n is the number of nodes in the tree. O(h) space complexity where h is the height of the tree.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Break? Sleep! *\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"the drake meme\"), \" \\uD83D\\uDE02\\uD83E\\uDD37\\u200D\\u2642\\uFE0F\")), mdx(\"h5\", null, \"12:30\"), mdx(\"p\", null, \"Back on Leetcode December Challenge \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/explore/featured/card/december-leetcoding-challenge/570/week-2-december-8th-december-14th/3562/\"\n  }), \"Day 11\"), \". The crux was to remove duplicate elements from a sorted array keeping at most 2 copies of an element.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Two pointers approach, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"read\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"write\"), \" pointers. Then check the frequency of current element and write according to that.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=remove-duplicates-from-sorted-array-ii.cpp\"\n  }), \"int removeDuplicates(vector<int> &nums) {\\n    int num = INT_MIN;\\n    int freq = 0;\\n    int write = 0;\\n    for (int read = 0; read < nums.size(); read++) {\\n        if (nums[read] == num) {\\n            freq++;\\n            if (freq <= 2) {\\n                nums[write] = nums[read];\\n                write++;\\n            }\\n        } else {\\n            num = nums[read];\\n            freq = 1;\\n            nums[write] = nums[read];\\n            write++;\\n        }\\n    }\\n\\n    return write;\\n}\\n\")), mdx(\"p\", null, \"Time Complexity O(n) and space complexity O(1)\"), mdx(\"h5\", null, \"14:30\"), mdx(\"p\", null, \"TIme to do the Leetcode January Challenge \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/explore/featured/card/january-leetcoding-challenge-2021/579/week-1-january-1st-january-7th/3592/\"\n  }), \"Day 4\"), \". Merge two sorted lists. Since I have done this before, let's see the time it takes to actually code the solution.\\nPhew! Done. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"7 minutes\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=merge-two-sorted-lists.cpp\"\n  }), \"ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {\\n    if (l1 == NULL) return l2;\\n    if (l2 == NULL) return l1;\\n\\n    ListNode *head = new ListNode();\\n    ListNode *ans = head;\\n\\n    while (l1 != NULL && l2 != NULL) {\\n        if (l1->val < l2->val) {\\n            head->next = l1;\\n            l1 = l1->next;\\n            head = head->next;\\n        } else {\\n            head->next = l2;\\n            l2 = l2->next;\\n            head = head->next;\\n        }\\n    }\\n\\n    if (l1 == NULL) {\\n        head->next = l2;\\n    } else {\\n        head->next = l1;\\n    }\\n\\n    return ans->next;\\n}\\n\")), mdx(\"p\", null, \"Time complexity O(n+m) where n and m are the total number of nodes in the linked list 1 and 2 respectively. Space complexity O(1). \"), mdx(\"h5\", null, \"15:45\"), mdx(\"p\", null, \"Worked on enabling the copy button that was bothering me for the last couple of days. Turns out, I had shadowed the file earlier and had some issues with that.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Also wanted tags for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C++\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Go\"), \" files since most of the code I'm uploading is in those languages. Happy with the result.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Battery 6%, taking a break!\")), mdx(\"h5\", null, \"20:30\"), mdx(\"p\", null, \"Finally done with the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/parasg1999\"\n  }), \"GitHub Profile ReadMe\"), \". So what started at the start of the day came to a halt at the end. Talk about things that take up your life! \\uD83D\\uDE1B\"), mdx(\"h5\", null, \"22:00\"), mdx(\"p\", null, \"Tried the ant problem on Codechef. For the first subtask where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"number of lanes = 1\"), \". Figured that the answer should be the product of ants on wither side of origin but is showing an error.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Let's see it tomorrow.\"), mdx(\"h5\", null, \"00:12\"), mdx(\"p\", null, \"Worked on the websites that Kshitija and Mansi are making and the day ends with that.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Adios!\")), mdx(\"h3\", null, \"EOD Checklist\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Go\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Leetcode January Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Codechef Long Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Raahee\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"This blog \")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"2:30 Can't sleep so I thought I'll put some work into the GitHub profile ReadMe.  4:00 So what started to be GitHub ReadMe journey turned…","timeToRead":2,"banner":null}},"pageContext":{"slug":"/jan-4-daily-programming-diary","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}