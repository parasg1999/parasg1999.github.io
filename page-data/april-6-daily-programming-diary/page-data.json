{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/april-6-daily-programming-diary","result":{"data":{"post":{"__typename":"MdxPost","slug":"/april-6-daily-programming-diary","title":"April 6 - Daily Programming Diary","date":"06.04.2021","tags":[{"name":"Diary","slug":"diary"},{"name":"Programming","slug":"programming"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"April 6 - Daily Programming Diary\",\n  \"date\": \"2021-04-06T00:00:00.000Z\",\n  \"tags\": [\"Diary\", \"Programming\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h5\", null, \"9:00\"), mdx(\"p\", null, \"I have to work on the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Talk to professional\"), \" feature on the Raahee website and have a deadline to stick to.\\nI'll just be creating a bad UI for now with a list of professionals and then a chat box.\"), mdx(\"h5\", null, \"11:00\"), mdx(\"p\", null, \"Okay! Been hammering my keyboard, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Googling\"), \" for possible errors, and banging my head on the wall for the last 2 hours only to realise that the Auth token is invalid, and that the server documentation is crap.\\nMy head hurts. \"), mdx(\"p\", null, \"But, on the flip side, majority of the work is done. The socket object is provided by the React context API for each component, making it easy for reusing single instance. The connect code is working alright, and the listeners have been added. The only thing left to do is possibly to integrate the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Razorpay\"), \" before payment, and making a call to MHP.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I'ma take a break now.\")), mdx(\"h5\", null, \"12:00\"), mdx(\"p\", null, \"Okay, yeah. Server code needs to be changed to work with React. :facepalm:\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Turns out, the default transport used when making a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"socket-io\"), \" request is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"websocket\"), \" and sending \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"extraHeaders\"), \" is not possible. WOW!\"), mdx(\"h5\", null, \"12:30\"), mdx(\"p\", null, \"While waiting for the server code to update, I am currently testing in Firefox. I was able to establish the connection and was able to finally listen to socket events. Phew!\"), mdx(\"h5\", null, \"13:00\"), mdx(\"p\", null, \"Turns out the server is not doing what the documentation says at all. The features have not been pushed to the server and I'm expected to use them to build the app. \"), mdx(\"h5\", null, \"14:00\"), mdx(\"p\", null, \"Started the development server to do the work quickly. Done with the basic requests to send requests and cancel.\"), mdx(\"h5\", null, \"15:00\"), mdx(\"p\", null, \"Things got a little of of hand when trying to test the app with the MHP side of socket. At first, I thought and I wanna curse myself for that, that since the database is shared, the sockets would be shared. Of course that isn't true!\"), mdx(\"p\", null, \"Anyway, when I changed the the sample code to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ngrok\"), \" server. Everything worked. Now all there's left to do is the chat feature. That would be easy. Just listen for the messages and check if the message was sent by the current user or the other user, and display accordingly. Yay!\"), mdx(\"p\", null, \"Will fix the minor things when integrating the frontend since it's bound to break stuff. Let's see.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Time for a break\")), mdx(\"h3\", null, \"EOD Checklist\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Raahee\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Leetcode February Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"This blog\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"9:00 I have to work on the  Talk to professional  feature on the Raahee website and have a deadline to stick to.\nI'll just be creating a badâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/april-6-daily-programming-diary","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}