{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/jan-11-daily-programming-diary","result":{"data":{"post":{"__typename":"MdxPost","slug":"/jan-11-daily-programming-diary","title":"Jan 11 - Daily Programming Diary","date":"11.01.2021","tags":[{"name":"Diary","slug":"diary"},{"name":"Programming","slug":"programming"},{"name":"LocalHackDay","slug":"local-hack-day"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Jan 11 - Daily Programming Diary\",\n  \"date\": \"2021-01-11T00:00:00.000Z\",\n  \"tags\": [\"Diary\", \"Programming\", \"LocalHackDay\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h5\", null, \"16:00\"), mdx(\"p\", null, \"I know what you wanna say - \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Wake up early! This is no way to live.\"), \"\\nAgreed!\"), mdx(\"p\", null, \"Anyway I submitted a couple of challenges in MLH LocalHackDay and just completed the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/explore/featured/card/january-leetcoding-challenge-2021/580/week-2-january-8th-january-14th/3600/\"\n  }), \"Leetcode Daily Challenge\"), \".\\nHad to merge two sorted arrays in the first array. I looked at the constraints and my immediate reaction was 200 elements, that's too low so I implemented the way we merge arrays but the inplace thing turned out to be more challenging that it initially seemed. So I merged the two arrays together and did the sort on them since you know, 200.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=merge-sorted-array.cpp\"\n  }), \"void merge(vector<int> &nums1, int m, vector<int> &nums2, int n) {\\n    if (n == 0) return;\\n\\n    for (int i = 0; i < n; i++) {\\n        nums1[m + i] = nums2[i];\\n    }\\n\\n    sort(nums1.begin(), nums1.end());\\n    return;\\n}\\n\")), mdx(\"h5\", null, \"23:30\"), mdx(\"p\", null, \"I didn't write a lot today. Most of the time I was working on MLH Local Hack Day. I have 15 points on Day 1.\\nCould this BE any better!?\"), mdx(\"p\", null, \"Anyway it's already 00:30 on 12\", mdx(\"sup\", null, \"th\"), \", so I'll go and work on Raahee Blog now.\"), mdx(\"h3\", null, \"EOD Checklist\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Leetcode January Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Raahee (Just attended the meeting)\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"This blog\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"16:00 I know what you wanna say -  Wake up early! This is no way to live. \nAgreed! Anyway I submitted a couple of challenges in MLHâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/jan-11-daily-programming-diary","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}