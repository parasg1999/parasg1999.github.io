{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/jan-6-daily-programming-diary","result":{"data":{"post":{"__typename":"MdxPost","slug":"/jan-6-daily-programming-diary","title":"Jan 6 - Daily Programming Diary","date":"06.01.2021","tags":[{"name":"Diary","slug":"diary"},{"name":"Programming","slug":"programming"},{"name":"Crio.do","slug":"crio-do"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Jan 6 - Daily Programming Diary\",\n  \"date\": \"2021-01-06T00:00:00.000Z\",\n  \"tags\": [\"Diary\", \"Programming\", \"Crio.do\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h5\", null, \"12:30\"), mdx(\"p\", null, \"Received a mail from Crio yesterday about Winter of doing round 1. Isn't really a big deal since I don't even think they've shortlisted anyone yet. Waiting for the saturday event to learn more and see if it's as good as the hype surrounding it.\\nStarting Raahee work for today.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Tasks:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add registered users to the collection  \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add users on signup  \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add report and delete on community\")), mdx(\"h5\", null, \"14:30\"), mdx(\"p\", null, \"Worked on Raahee users collection. Damn it was crazy focusing on all the little things so much so that I became frustrated at one point. Still have to add the already registered users to the test DB, and hope it doesn't break the app.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Break!\")), mdx(\"h5\", null, \"16:00\"), mdx(\"p\", null, \"Since I haven't been able to keep up with Go and all the other things, I am thinking about moving to Go for solving the competitive programming questions. Now, the single issue with that is I'll either have to write code in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C++\"), \", or pseudocode first and then in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Go\"), \" which seems a little exhausting but I have to make that trade-off.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"When I think about it, it's like learning Spanish. You can't think in Spanish, but what you can do is think in your native language and then translate to Spanish. Following the same philosophy here. :)\")), mdx(\"p\", null, \"Writing code in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C++\"), \" first.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Approach :\"), \" If the difference of prev and current element contain k elements, return the kth element from prev element.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=kth-missing-positive-integer.cpp\"\n  }), \"int findKthPositive(vector<int> &arr, int k) {\\n    int prev = 0;\\n    int sum = 0;\\n    arr.push_back(10000);\\n    for (int i = 0; i < arr.size(); i++) {\\n        int temp = arr[i] - prev - 1;\\n        if (sum + temp >= k) {\\n            return prev + k - sum;\\n        }\\n        sum += temp;\\n        prev = arr[i];\\n    }\\n\\n    return 0;\\n}\\n\")), mdx(\"p\", null, \"Time complexity O(n), space O(1). Translating to Go now.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-go:title=kth-missing-positive-integer.go\"\n  }), \"func findKthPositive(arr []int, k int) int {\\n    var prev, sum int = 0, 0\\n    arr = append(arr, 10000)\\n    \\n    for i := 0; i < len(arr); i++ {\\n        var temp int = arr[i] - prev - 1\\n        if sum + temp >= k {\\n            return prev + k - sum\\n        }        \\n        sum += temp\\n        prev = arr[i]\\n    }\\n    \\n    return 0;\\n}\\n\")), mdx(\"h5\", null, \"17:55\"), mdx(\"p\", null, \"So I was thinking about writing secrets in here, and I have made a basic component that would take the password and unlock what I wrote.\"), mdx(\"p\", null, \"Try writing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"parasisgreat\"), \" in the box and press enter. Oh I know you don't wanna write it but I'm a braggart!\"), mdx(HideContent, {\n    myKey: \"parasisgreat\",\n    mdxType: \"HideContent\"\n  }, mdx(\"p\", {\n    style: {\n      color: \"#03DAC5\"\n    }\n  }, \"This would generally contain a secret.\")), mdx(\"p\", null, \"Well you shouldn't be surprised! \\uD83D\\uDE07\"), mdx(\"p\", null, \"Amidst the glory of this, I almost forgot that I also used spell check today for rechecking all the posts.\\nUsed \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"markdown-spellcheck\"), \" for the task.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npm i -g markdown-spellcheck\\n\\n# -n for not including numbers\\nmdspell -n '**/*6*/**.mdx' '!**/node_modules/**/*.mdx'\\n\")), mdx(\"h5\", null, \"21:50\"), mdx(\"p\", null, \"Done with the report feature in Raahee website. Took almost 90 minutes and now I'm tired.\"), mdx(\"p\", null, \"I have also been thinking about the best way to encrypt the data. I can go with standard encryption technique but it would be hard to actually remember the passwords for each document. Then there is an option for auto calculating password based on document slug, which would be a better approach. Also, rather than writing content here, I can just link it to firebase to fetch the content and parse the markdown which makes more sense but then my code is on GitHub. \\uD83D\\uDE15\"), mdx(\"h5\", null, \"22:46\"), mdx(\"p\", null, \"Added like feature community page. The code seems to be messed up quite a lot. The database naming scheme used by the app and website teams differ so much that I don't even have the words to express myself.\"), mdx(\"p\", null, \"I think I'm just gonna sleep for now.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Ciao!\")), mdx(\"h3\", null, \"EOD Checklist\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Go\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Leetcode January Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Codechef Long Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Raahee\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"This blog (Implemented a new feature)\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"12:30 Received a mail from Crio yesterday about Winter of doing round 1. Isn't really a big deal since I don't even think they'veâ€¦","timeToRead":2,"banner":null}},"pageContext":{"slug":"/jan-6-daily-programming-diary","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}