{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/jan-2-daily-programming-diary","result":{"data":{"post":{"__typename":"MdxPost","slug":"/jan-2-daily-programming-diary","title":"Jan 2 - Daily Programming Diary","date":"02.01.2021","tags":[{"name":"Diary","slug":"diary"},{"name":"Programming","slug":"programming"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Jan 2 - Daily Programming Diary\",\n  \"date\": \"2021-01-02T00:00:00.000Z\",\n  \"tags\": [\"Diary\", \"Programming\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h5\", null, \"7:50\"), mdx(\"p\", null, \"Starting the day a little early than usual, but I am not really sure if I can get work done during daylight. Need to work on a bug that is causing the snackbar to show \\\"invalid hook call\\\".\\nI'm pretty sure that has to do with reckless code adding without testing.\"), mdx(\"h5\", null, \"8:15\"), mdx(\"p\", null, \"Yup, made a Higher Order Component to wrap the Add Event Component and called the hook there, passed the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"enqueueSnackbar\"), \" down from there! React++ \\uD83D\\uDE09\"), mdx(\"a\", {\n    name: \"withSnackbar\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx:title=src/HOC/withSnackbar.jsx\",\n    \"metastring\": \"{5,7}\",\n    \"{5,7}\": true\n  }), \"import React from 'react';\\nimport { useSnackbar } from 'notistack';\\n\\nconst withSnackbar = (Component) => (props) => {\\n  const { enqueueSnackbar } = useSnackbar();\\n  return (\\n    <Component {...props} enqueueSnackbar={enqueueSnackbar} />\\n  );\\n};\\n\\nexport default withSnackbar;\\n\")), mdx(\"p\", null, \"This feels good! \"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Break;\")), mdx(\"h5\", null, \"10:50\"), mdx(\"p\", null, \"After a long power cut, and significantly behind schedule, I'm back. First things first, trying to solve the 4th question \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.codechef.com/JAN21C/problems/BILLRD\"\n  }), \"BILLRD\"), \" in Long Challenge.\"), mdx(\"h5\", null, \"11:30\"), mdx(\"p\", null, \"Wow squares do help with collision. The trick? Well there can only be a maximum of 4 collisions no matter what. The Link to solution is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.codechef.com/viewsolution/41071146\"\n  }), \"41071146\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Time to complete the Raahee reported content feature.\"), mdx(\"h5\", null, \"12:30\"), mdx(\"p\", null, \"After an hour of overcoming the UI hurdles, I have a somewhat respectable UI for the cards and the details are being displayed properly. The only thing left is to wait for the action list. \"), mdx(\"h5\", null, \"14:00\"), mdx(\"p\", null, \"Have been banging my head around the 5th problem on Codechef for a while now and I can't seem to get it. From what I gather, it's like the normal coin change problem but with same amount twice. Guess I'll have to go back to basics.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Well, on the Leetcode side, I completed the challenge \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/explore/featured/card/january-leetcoding-challenge-2021/579/week-1-january-1st-january-7th/3590/\"\n  }), \"Day 2\"), \" pretty quickly today. Had to find the corresponding nodes in a cloned tree, so it wasn't really difficult.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=get-node-copy-from-clone.cpp\"\n  }), \"TreeNode *getTargetCopy(TreeNode *original, TreeNode *cloned, TreeNode *target) {\\n    if (original == NULL)\\n        return NULL;\\n\\n    if (original == target) {\\n        return cloned;\\n    }\\n\\n    TreeNode *left = getTargetCopy(original->left, cloned->left, target);\\n\\n    if (left != NULL) {\\n        return left;\\n    }\\n\\n    TreeNode *right = getTargetCopy(original->right, cloned->right, target);\\n\\n    if (right != NULL) {\\n        return right;\\n    }\\n\\n    return NULL;\\n}\\n\")), mdx(\"p\", null, \"Time complexity is O(n) where n is the number of nodes. Space complexity is O(n) if the tree is like a linked list.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I need a break!\")), mdx(\"h5\", null, \"16:40\"), mdx(\"p\", null, \"Completely done with the Reported Content feature. Working alright! Used Material UI Snackbar \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"notistack\"), \" to create prompts. Looks awesome \\uD83D\\uDC4F\"), mdx(\"p\", null, \"I also realized out that notistack already contains the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#withSnackbar\"\n  }), \"withSnackbar\"), \". Bummer I mean, but at least I made it myself. I mean a lot of things are already coded, doesn't mean you can find them when you want. \"), mdx(\"h5\", null, \"17:10\"), mdx(\"p\", null, \"Starting today's GoRoutine!\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Aim :\"), \" Creating a module and calling it from other module, helps in package publishing I guess. Following \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://golang.org/doc/tutorial/create-module\"\n  }), \"documentation\"), \".\"), mdx(\"h5\", null, \"17:50\"), mdx(\"p\", null, \"Caveats with Go\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"First letter of function name defines if the function is public(capital letter) or private(small letter)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Requiring custom modules means building first, wow!\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Enough Go for today, it's a bit messed up! \")), mdx(\"p\", null, \"It's 21:33 and I couldn't be any more tired, the day ends here. Could've been better but I'm satisfied with today.\"), mdx(\"h3\", null, \"EOD Checklist\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Go\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Leetcode January Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Codechef Long Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Raahee\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"This blog \")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"7:50 Starting the day a little early than usual, but I am not really sure if I can get work done during daylight. Need to work on a bug thatâ€¦","timeToRead":2,"banner":null}},"pageContext":{"slug":"/jan-2-daily-programming-diary","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}