{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/jan-21-daily-programming-diary","result":{"data":{"post":{"__typename":"MdxPost","slug":"/jan-21-daily-programming-diary","title":"Jan 21 - Daily Programming Diary","date":"21.01.2021","tags":[{"name":"Diary","slug":"diary"},{"name":"Programming","slug":"programming"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Jan 21 - Daily Programming Diary\",\n  \"date\": \"2021-01-21T00:00:00.000Z\",\n  \"tags\": [\"Diary\", \"Programming\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h5\", null, \"23:00\"), mdx(\"p\", null, \"Writing pretty late tonight. So I gave the test for Delhivery today and I think it went pretty well. For what it's worth, I think that there is a good chance but then again, luck never has my side now does it!\"), mdx(\"p\", null, \"Since I forgot to complete yesterday's \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/explore/challenge/card/january-leetcoding-challenge-2021/581/week-3-january-15th-january-21st/3610/\"\n  }), \"Leetcode Challenge\"), \". Of course, a standard stack application, checking balanced parentheses.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=valid-paretheses.cpp\"\n  }), \"bool isValid(string s) {\\n    stack<char> stk;\\n    for (int i = 0; i < s.length(); i++) {\\n        if (s[i] == '(' || s[i] == '{' || s[i] == '[') {\\n            stk.push(s[i]);\\n        } else if (stk.empty()) {\\n            return false;\\n        } else {\\n            if (s[i] == ')' && stk.top() == '(') {\\n                stk.pop();\\n            } else if (s[i] == ']' && stk.top() == '[') {\\n                stk.pop();\\n            } else if (s[i] == '}' && stk.top() == '{') {\\n                stk.pop();\\n            } else return false;\\n        }\\n    }\\n    return stk.empty();\\n}\\n\")), mdx(\"p\", null, \"Now, today's \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/explore/challenge/card/january-leetcoding-challenge-2021/581/week-3-january-15th-january-21st/3611/\"\n  }), \"question\"), \" seemed to be out of my league but I thought about a stack based solution that can find the smallest element in the first \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n-k\"), \" elements and then proceed with the rest of the array.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=find-the-most-competitive-subsequence.cpp\"\n  }), \"vector<int> mostCompetitive(vector<int> &nums, int k) {\\n    int permitted_ops = nums.size() - k;\\n    stack<int> stk;\\n    for (int i = 0; i < nums.size(); i++) {\\n        while (!stk.empty() && nums[i] < stk.top() && permitted_ops > 0) {\\n            stk.pop();\\n            permitted_ops--;\\n        }\\n        stk.push(nums[i]);\\n    }\\n\\n    stack<int> temp;\\n    vector<int> ans;\\n\\n    while (!stk.empty()) {\\n        temp.push(stk.top());\\n        stk.pop();\\n    }\\n\\n    while (!temp.empty() && k--) {\\n        ans.push_back(temp.top());\\n        temp.pop();\\n    }\\n\\n    return ans;\\n}\\n\")), mdx(\"p\", null, \"That's all for today. I think I'll read a book now. Not gonna write more since I don't wanna jinx it. \"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Bye!\")), mdx(\"h3\", null, \"EOD Checklist\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Leetcode January Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Raahee\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"This blog\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"23:00 Writing pretty late tonight. So I gave the test for Delhivery today and I think it went pretty well. For what it's worth, I think thatâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/jan-21-daily-programming-diary","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}