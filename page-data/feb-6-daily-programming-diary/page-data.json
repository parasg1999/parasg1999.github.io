{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/feb-6-daily-programming-diary","result":{"data":{"post":{"__typename":"MdxPost","slug":"/feb-6-daily-programming-diary","title":"Feb 6 - Daily Programming Diary","date":"06.02.2021","tags":[{"name":"Diary","slug":"diary"},{"name":"Programming","slug":"programming"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Feb 6 - Daily Programming Diary\",\n  \"date\": \"2021-02-06T00:00:00.000Z\",\n  \"tags\": [\"Diary\", \"Programming\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h5\", null, \"14:00\"), mdx(\"p\", null, \"Let's start today's \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/explore/challenge/card/february-leetcoding-challenge-2021/584/week-1-february-1st-february-7th/3630/\"\n  }), \"Leetcode challenge\"), \". It looks a bit weird, the question doesn't seem to provide appropriate information.\"), mdx(\"p\", null, \"My approach is to traverse the right path and printing it in order. Now this approach seems to be wrong and I can unserstand why. \\\"Standing on the right\\\" of the tree means seeing the tree from the right and seeing the first node that's in front. So I need to travserse the tree using preorder traversal and store the node values on left tree with their heights, and if a node exists to it's right on the same level, update the value.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=binary-tree-right-side-view.cpp\"\n  }), \"map<int, int> m;\\n\\nvoid traverse(TreeNode *root, int height) {\\n    if (!root) return;\\n\\n    m[height] = root->val;\\n    traverse(root->left, height + 1);\\n    traverse(root->right, height + 1);\\n}\\n\\nvector<int> rightSideView(TreeNode *root) {\\n    traverse(root, 0);\\n\\n    vector<int> v;\\n\\n    for (auto a : m) {\\n        v.push_back(a.second);\\n    }\\n\\n    return v;\\n}\\n\")), mdx(\"p\", null, \"The complexity is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"O(N)\"), \" and space complexity is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"O(N)\"), \" where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"N\"), \" is the number of nodes in the tree.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Bye!\")), mdx(\"h3\", null, \"EOD Checklist\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Leetcode February Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"This blog\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"14:00 Let's start today's  Leetcode challenge . It looks a bit weird, the question doesn't seem to provide appropriate information. Myâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/feb-6-daily-programming-diary","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}