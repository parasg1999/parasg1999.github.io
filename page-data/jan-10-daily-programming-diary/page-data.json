{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/jan-10-daily-programming-diary","result":{"data":{"post":{"__typename":"MdxPost","slug":"/jan-10-daily-programming-diary","title":"Jan 10 - Daily Programming Diary","date":"10.01.2021","tags":[{"name":"Diary","slug":"diary"},{"name":"Programming","slug":"programming"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Jan 10 - Daily Programming Diary\",\n  \"date\": \"2021-01-10T00:00:00.000Z\",\n  \"tags\": [\"Diary\", \"Programming\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h5\", null, \"6:30\"), mdx(\"p\", null, \"Starting a bit early today. I was looking at the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Navbar />\"), \" yesterday and thought the performance on first reload could be improved by using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useEffect\"), \" instead of the currently used location listener. Voila! It worked.\"), mdx(\"p\", null, \"See, I can do UI fixes as well \\uD83E\\uDD37\\u200D\\u2642\\uFE0F \"), mdx(\"h5\", null, \"8:00\"), mdx(\"p\", null, \"I was exploring the source code and figured out 2 major things - \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The react router only works with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<Link />\"), \" component. The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<a/>\"), \" tags don't go well when working with SPAs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I don't know react.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setTimeout(() => resumeWork(), 2 * 1000 * 60 * 60);\"))), mdx(\"h5\", null, \"10:05\"), mdx(\"p\", null, \"Started with the Crio bytes. Since I already knew the basics of HTTP, REST, Linux, and EC2, I was able to zoom through the modules pretty quickly. \"), mdx(\"h5\", null, \"14:30\"), mdx(\"p\", null, \"Starting with today's \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/explore/featured/card/january-leetcoding-challenge-2021/580/week-2-january-8th-january-14th/3599\"\n  }), \"Leetcode Challenge\"), \". At first I wasn't able to understand the question. I thought I had to calculate the minimum cost of creating the sorted array which got me confused. After reading it for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n\"), mdx(\"sup\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"th\")), \" time, I figured that the elements have to be inserted in an orderly manner.\"), mdx(\"h5\", null, \"15:00\"), mdx(\"p\", null, \"It's been half an hour and the code I wrote to do the calculation is giving TLE, and I get it. The implementation is taking O(n^2) time to calculate the prefix sum.\\nI have no idea so I'm gonna take a look at the hint.\"), mdx(\"h5\", null, \"15:20\"), mdx(\"p\", null, \"So I studied about BIT aka Binary Indexed Tree, which calculates prefix sum in O(logn) time so the overall complexity of my program will go down to O(nlogn).\"), mdx(\"h5\", null, \"16:00\"), mdx(\"p\", null, \"Done with the code. Wow! New gun in my arsenal.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp:title=create-sorted-array-through-instructions.cpp\"\n  }), \"int bit[100002];\\n\\n// Find prefix sum of a number\\nint prefixSum(int num) {\\n    int ans = 0;\\n    for (int i = num; i > 0; i -= (i & -i)) {\\n        ans += bit[i];\\n    }\\n    return ans;\\n}\\n\\n// Update the prefix sum values\\nint update(int num) {\\n    for (int i = num; i <= 100001; i += (i & -i)) {\\n        bit[i] += 1;\\n    }\\n    return 0;\\n}\\n\\nint createSortedArray(vector<int> &inst) {\\n    int ans = 0;\\n    for (int i = 0; i < inst.size(); i++) {\\n        ans += min(prefixSum(inst[i] - 1), i - prefixSum(inst[i]));\\n        ans %= 1000000007;\\n        update(inst[i]);\\n    }\\n    return ans;\\n}\\n\")), mdx(\"p\", null, \"Again, no Go for this question. I'm just gonna put Go on hold for now unless I have some work on the back-end.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"break;\")), mdx(\"h5\", null, \"18:00\"), mdx(\"p\", null, \"Attending the Crio event now for REST byte.\"), mdx(\"h5\", null, \"19:00\"), mdx(\"p\", null, \"To be honest, after having developed a few production-ready APIs, I didn't learn anything new in the session but I guess I'll complete the byte and see what round 2 has for me.\"), mdx(\"h5\", null, \"22:30\"), mdx(\"p\", null, \"I started with building the Raahee server and made a boilerplate. Took some time to get the modules ready. Will be working on the database models now.\"), mdx(\"h5\", null, \"23:00\"), mdx(\"p\", null, \"Been writing models for the last 30 minutes and there are some issues. The conventions used in the document are inconsistent. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"imageUrl\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"imageurl\"), \" in different collections. It's a bit frustrating to actually look for these things when back-end is generally the first thing built.\"), mdx(\"h5\", null, \"23:30\"), mdx(\"p\", null, \"I'm tired now and will continue tomorrow. Will possibly work on the authentication and basic doc creation for events and such.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Okay Bye\")), mdx(\"h3\", null, \"EOD Checklist\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Leetcode January Challenge\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Raahee (Just attended the meeting)\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"This blog\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"6:30 Starting a bit early today. I was looking at the  <Navbar />  yesterday and thought the performance on first reload could be improvedâ€¦","timeToRead":2,"banner":null}},"pageContext":{"slug":"/jan-10-daily-programming-diary","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}